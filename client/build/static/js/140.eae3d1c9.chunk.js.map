{"version":3,"file":"static/js/140.eae3d1c9.chunk.js","mappings":"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","sources":["../node_modules/kdbush/src/sort.js","../node_modules/kdbush/src/within.js","../node_modules/kdbush/src/index.js","../node_modules/supercluster/index.js","../node_modules/kdbush/src/range.js","../node_modules/@googlemaps/markerclusterer/node_modules/tslib/tslib.es6.js","../node_modules/@googlemaps/markerclusterer/src/cluster.ts","../node_modules/@googlemaps/markerclusterer/src/algorithms/core.ts","../node_modules/@googlemaps/markerclusterer/src/algorithms/supercluster.ts","../node_modules/@googlemaps/markerclusterer/src/renderer.ts","../node_modules/@googlemaps/markerclusterer/src/markerclusterer.ts","../node_modules/@googlemaps/markerclusterer/src/overlay-view-safe.ts","../node_modules/@capacitor/google-maps/src/web.ts","../node_modules/fast-deep-equal/index.js"],"sourcesContent":["\nexport default function sortKD(ids, coords, nodeSize, left, right, depth) {\n    if (right - left <= nodeSize) return;\n\n    const m = (left + right) >> 1;\n\n    select(ids, coords, m, left, right, depth % 2);\n\n    sortKD(ids, coords, nodeSize, left, m - 1, depth + 1);\n    sortKD(ids, coords, nodeSize, m + 1, right, depth + 1);\n}\n\nfunction select(ids, coords, k, left, right, inc) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            select(ids, coords, k, newLeft, newRight, inc);\n        }\n\n        const t = coords[2 * k + inc];\n        let i = left;\n        let j = right;\n\n        swapItem(ids, coords, left, k);\n        if (coords[2 * right + inc] > t) swapItem(ids, coords, left, right);\n\n        while (i < j) {\n            swapItem(ids, coords, i, j);\n            i++;\n            j--;\n            while (coords[2 * i + inc] < t) i++;\n            while (coords[2 * j + inc] > t) j--;\n        }\n\n        if (coords[2 * left + inc] === t) swapItem(ids, coords, left, j);\n        else {\n            j++;\n            swapItem(ids, coords, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swapItem(ids, coords, i, j) {\n    swap(ids, i, j);\n    swap(coords, 2 * i, 2 * j);\n    swap(coords, 2 * i + 1, 2 * j + 1);\n}\n\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n","\nexport default function within(ids, coords, qx, qy, r, nodeSize) {\n    const stack = [0, ids.length - 1, 0];\n    const result = [];\n    const r2 = r * r;\n\n    while (stack.length) {\n        const axis = stack.pop();\n        const right = stack.pop();\n        const left = stack.pop();\n\n        if (right - left <= nodeSize) {\n            for (let i = left; i <= right; i++) {\n                if (sqDist(coords[2 * i], coords[2 * i + 1], qx, qy) <= r2) result.push(ids[i]);\n            }\n            continue;\n        }\n\n        const m = Math.floor((left + right) / 2);\n\n        const x = coords[2 * m];\n        const y = coords[2 * m + 1];\n\n        if (sqDist(x, y, qx, qy) <= r2) result.push(ids[m]);\n\n        const nextAxis = (axis + 1) % 2;\n\n        if (axis === 0 ? qx - r <= x : qy - r <= y) {\n            stack.push(left);\n            stack.push(m - 1);\n            stack.push(nextAxis);\n        }\n        if (axis === 0 ? qx + r >= x : qy + r >= y) {\n            stack.push(m + 1);\n            stack.push(right);\n            stack.push(nextAxis);\n        }\n    }\n\n    return result;\n}\n\nfunction sqDist(ax, ay, bx, by) {\n    const dx = ax - bx;\n    const dy = ay - by;\n    return dx * dx + dy * dy;\n}\n","\nimport sort from './sort';\nimport range from './range';\nimport within from './within';\n\nconst defaultGetX = p => p[0];\nconst defaultGetY = p => p[1];\n\nexport default class KDBush {\n    constructor(points, getX = defaultGetX, getY = defaultGetY, nodeSize = 64, ArrayType = Float64Array) {\n        this.nodeSize = nodeSize;\n        this.points = points;\n\n        const IndexArrayType = points.length < 65536 ? Uint16Array : Uint32Array;\n\n        const ids = this.ids = new IndexArrayType(points.length);\n        const coords = this.coords = new ArrayType(points.length * 2);\n\n        for (let i = 0; i < points.length; i++) {\n            ids[i] = i;\n            coords[2 * i] = getX(points[i]);\n            coords[2 * i + 1] = getY(points[i]);\n        }\n\n        sort(ids, coords, nodeSize, 0, ids.length - 1, 0);\n    }\n\n    range(minX, minY, maxX, maxY) {\n        return range(this.ids, this.coords, minX, minY, maxX, maxY, this.nodeSize);\n    }\n\n    within(x, y, r) {\n        return within(this.ids, this.coords, x, y, r, this.nodeSize);\n    }\n}\n","\nimport KDBush from 'kdbush';\n\nconst defaultOptions = {\n    minZoom: 0,   // min zoom to generate clusters on\n    maxZoom: 16,  // max zoom level to cluster the points on\n    minPoints: 2, // minimum points to form a cluster\n    radius: 40,   // cluster radius in pixels\n    extent: 512,  // tile extent (radius is calculated relative to it)\n    nodeSize: 64, // size of the KD-tree leaf node, affects performance\n    log: false,   // whether to log timing info\n\n    // whether to generate numeric ids for input features (in vector tiles)\n    generateId: false,\n\n    // a reduce function for calculating custom cluster properties\n    reduce: null, // (accumulated, props) => { accumulated.sum += props.sum; }\n\n    // properties to use for individual points when running the reducer\n    map: props => props // props => ({sum: props.my_value})\n};\n\nconst fround = Math.fround || (tmp => ((x) => { tmp[0] = +x; return tmp[0]; }))(new Float32Array(1));\n\nexport default class Supercluster {\n    constructor(options) {\n        this.options = extend(Object.create(defaultOptions), options);\n        this.trees = new Array(this.options.maxZoom + 1);\n    }\n\n    load(points) {\n        const {log, minZoom, maxZoom, nodeSize} = this.options;\n\n        if (log) console.time('total time');\n\n        const timerId = `prepare ${  points.length  } points`;\n        if (log) console.time(timerId);\n\n        this.points = points;\n\n        // generate a cluster object for each point and index input points into a KD-tree\n        let clusters = [];\n        for (let i = 0; i < points.length; i++) {\n            if (!points[i].geometry) continue;\n            clusters.push(createPointCluster(points[i], i));\n        }\n        this.trees[maxZoom + 1] = new KDBush(clusters, getX, getY, nodeSize, Float32Array);\n\n        if (log) console.timeEnd(timerId);\n\n        // cluster points on max zoom, then cluster the results on previous zoom, etc.;\n        // results in a cluster hierarchy across zoom levels\n        for (let z = maxZoom; z >= minZoom; z--) {\n            const now = +Date.now();\n\n            // create a new set of clusters for the zoom and index them with a KD-tree\n            clusters = this._cluster(clusters, z);\n            this.trees[z] = new KDBush(clusters, getX, getY, nodeSize, Float32Array);\n\n            if (log) console.log('z%d: %d clusters in %dms', z, clusters.length, +Date.now() - now);\n        }\n\n        if (log) console.timeEnd('total time');\n\n        return this;\n    }\n\n    getClusters(bbox, zoom) {\n        let minLng = ((bbox[0] + 180) % 360 + 360) % 360 - 180;\n        const minLat = Math.max(-90, Math.min(90, bbox[1]));\n        let maxLng = bbox[2] === 180 ? 180 : ((bbox[2] + 180) % 360 + 360) % 360 - 180;\n        const maxLat = Math.max(-90, Math.min(90, bbox[3]));\n\n        if (bbox[2] - bbox[0] >= 360) {\n            minLng = -180;\n            maxLng = 180;\n        } else if (minLng > maxLng) {\n            const easternHem = this.getClusters([minLng, minLat, 180, maxLat], zoom);\n            const westernHem = this.getClusters([-180, minLat, maxLng, maxLat], zoom);\n            return easternHem.concat(westernHem);\n        }\n\n        const tree = this.trees[this._limitZoom(zoom)];\n        const ids = tree.range(lngX(minLng), latY(maxLat), lngX(maxLng), latY(minLat));\n        const clusters = [];\n        for (const id of ids) {\n            const c = tree.points[id];\n            clusters.push(c.numPoints ? getClusterJSON(c) : this.points[c.index]);\n        }\n        return clusters;\n    }\n\n    getChildren(clusterId) {\n        const originId = this._getOriginId(clusterId);\n        const originZoom = this._getOriginZoom(clusterId);\n        const errorMsg = 'No cluster with the specified id.';\n\n        const index = this.trees[originZoom];\n        if (!index) throw new Error(errorMsg);\n\n        const origin = index.points[originId];\n        if (!origin) throw new Error(errorMsg);\n\n        const r = this.options.radius / (this.options.extent * Math.pow(2, originZoom - 1));\n        const ids = index.within(origin.x, origin.y, r);\n        const children = [];\n        for (const id of ids) {\n            const c = index.points[id];\n            if (c.parentId === clusterId) {\n                children.push(c.numPoints ? getClusterJSON(c) : this.points[c.index]);\n            }\n        }\n\n        if (children.length === 0) throw new Error(errorMsg);\n\n        return children;\n    }\n\n    getLeaves(clusterId, limit, offset) {\n        limit = limit || 10;\n        offset = offset || 0;\n\n        const leaves = [];\n        this._appendLeaves(leaves, clusterId, limit, offset, 0);\n\n        return leaves;\n    }\n\n    getTile(z, x, y) {\n        const tree = this.trees[this._limitZoom(z)];\n        const z2 = Math.pow(2, z);\n        const {extent, radius} = this.options;\n        const p = radius / extent;\n        const top = (y - p) / z2;\n        const bottom = (y + 1 + p) / z2;\n\n        const tile = {\n            features: []\n        };\n\n        this._addTileFeatures(\n            tree.range((x - p) / z2, top, (x + 1 + p) / z2, bottom),\n            tree.points, x, y, z2, tile);\n\n        if (x === 0) {\n            this._addTileFeatures(\n                tree.range(1 - p / z2, top, 1, bottom),\n                tree.points, z2, y, z2, tile);\n        }\n        if (x === z2 - 1) {\n            this._addTileFeatures(\n                tree.range(0, top, p / z2, bottom),\n                tree.points, -1, y, z2, tile);\n        }\n\n        return tile.features.length ? tile : null;\n    }\n\n    getClusterExpansionZoom(clusterId) {\n        let expansionZoom = this._getOriginZoom(clusterId) - 1;\n        while (expansionZoom <= this.options.maxZoom) {\n            const children = this.getChildren(clusterId);\n            expansionZoom++;\n            if (children.length !== 1) break;\n            clusterId = children[0].properties.cluster_id;\n        }\n        return expansionZoom;\n    }\n\n    _appendLeaves(result, clusterId, limit, offset, skipped) {\n        const children = this.getChildren(clusterId);\n\n        for (const child of children) {\n            const props = child.properties;\n\n            if (props && props.cluster) {\n                if (skipped + props.point_count <= offset) {\n                    // skip the whole cluster\n                    skipped += props.point_count;\n                } else {\n                    // enter the cluster\n                    skipped = this._appendLeaves(result, props.cluster_id, limit, offset, skipped);\n                    // exit the cluster\n                }\n            } else if (skipped < offset) {\n                // skip a single point\n                skipped++;\n            } else {\n                // add a single point\n                result.push(child);\n            }\n            if (result.length === limit) break;\n        }\n\n        return skipped;\n    }\n\n    _addTileFeatures(ids, points, x, y, z2, tile) {\n        for (const i of ids) {\n            const c = points[i];\n            const isCluster = c.numPoints;\n\n            let tags, px, py;\n            if (isCluster) {\n                tags = getClusterProperties(c);\n                px = c.x;\n                py = c.y;\n            } else {\n                const p = this.points[c.index];\n                tags = p.properties;\n                px = lngX(p.geometry.coordinates[0]);\n                py = latY(p.geometry.coordinates[1]);\n            }\n\n            const f = {\n                type: 1,\n                geometry: [[\n                    Math.round(this.options.extent * (px * z2 - x)),\n                    Math.round(this.options.extent * (py * z2 - y))\n                ]],\n                tags\n            };\n\n            // assign id\n            let id;\n            if (isCluster) {\n                id = c.id;\n            } else if (this.options.generateId) {\n                // optionally generate id\n                id = c.index;\n            } else if (this.points[c.index].id) {\n                // keep id if already assigned\n                id = this.points[c.index].id;\n            }\n\n            if (id !== undefined) f.id = id;\n\n            tile.features.push(f);\n        }\n    }\n\n    _limitZoom(z) {\n        return Math.max(this.options.minZoom, Math.min(Math.floor(+z), this.options.maxZoom + 1));\n    }\n\n    _cluster(points, zoom) {\n        const clusters = [];\n        const {radius, extent, reduce, minPoints} = this.options;\n        const r = radius / (extent * Math.pow(2, zoom));\n\n        // loop through each point\n        for (let i = 0; i < points.length; i++) {\n            const p = points[i];\n            // if we've already visited the point at this zoom level, skip it\n            if (p.zoom <= zoom) continue;\n            p.zoom = zoom;\n\n            // find all nearby points\n            const tree = this.trees[zoom + 1];\n            const neighborIds = tree.within(p.x, p.y, r);\n\n            const numPointsOrigin = p.numPoints || 1;\n            let numPoints = numPointsOrigin;\n\n            // count the number of points in a potential cluster\n            for (const neighborId of neighborIds) {\n                const b = tree.points[neighborId];\n                // filter out neighbors that are already processed\n                if (b.zoom > zoom) numPoints += b.numPoints || 1;\n            }\n\n            // if there were neighbors to merge, and there are enough points to form a cluster\n            if (numPoints > numPointsOrigin && numPoints >= minPoints) {\n                let wx = p.x * numPointsOrigin;\n                let wy = p.y * numPointsOrigin;\n\n                let clusterProperties = reduce && numPointsOrigin > 1 ? this._map(p, true) : null;\n\n                // encode both zoom and point index on which the cluster originated -- offset by total length of features\n                const id = (i << 5) + (zoom + 1) + this.points.length;\n\n                for (const neighborId of neighborIds) {\n                    const b = tree.points[neighborId];\n\n                    if (b.zoom <= zoom) continue;\n                    b.zoom = zoom; // save the zoom (so it doesn't get processed twice)\n\n                    const numPoints2 = b.numPoints || 1;\n                    wx += b.x * numPoints2; // accumulate coordinates for calculating weighted center\n                    wy += b.y * numPoints2;\n\n                    b.parentId = id;\n\n                    if (reduce) {\n                        if (!clusterProperties) clusterProperties = this._map(p, true);\n                        reduce(clusterProperties, this._map(b));\n                    }\n                }\n\n                p.parentId = id;\n                clusters.push(createCluster(wx / numPoints, wy / numPoints, id, numPoints, clusterProperties));\n\n            } else { // left points as unclustered\n                clusters.push(p);\n\n                if (numPoints > 1) {\n                    for (const neighborId of neighborIds) {\n                        const b = tree.points[neighborId];\n                        if (b.zoom <= zoom) continue;\n                        b.zoom = zoom;\n                        clusters.push(b);\n                    }\n                }\n            }\n        }\n\n        return clusters;\n    }\n\n    // get index of the point from which the cluster originated\n    _getOriginId(clusterId) {\n        return (clusterId - this.points.length) >> 5;\n    }\n\n    // get zoom of the point from which the cluster originated\n    _getOriginZoom(clusterId) {\n        return (clusterId - this.points.length) % 32;\n    }\n\n    _map(point, clone) {\n        if (point.numPoints) {\n            return clone ? extend({}, point.properties) : point.properties;\n        }\n        const original = this.points[point.index].properties;\n        const result = this.options.map(original);\n        return clone && result === original ? extend({}, result) : result;\n    }\n}\n\nfunction createCluster(x, y, id, numPoints, properties) {\n    return {\n        x: fround(x), // weighted cluster center; round for consistency with Float32Array index\n        y: fround(y),\n        zoom: Infinity, // the last zoom the cluster was processed at\n        id, // encodes index of the first child of the cluster and its zoom level\n        parentId: -1, // parent cluster id\n        numPoints,\n        properties\n    };\n}\n\nfunction createPointCluster(p, id) {\n    const [x, y] = p.geometry.coordinates;\n    return {\n        x: fround(lngX(x)), // projected point coordinates\n        y: fround(latY(y)),\n        zoom: Infinity, // the last zoom the point was processed at\n        index: id, // index of the source feature in the original input array,\n        parentId: -1 // parent cluster id\n    };\n}\n\nfunction getClusterJSON(cluster) {\n    return {\n        type: 'Feature',\n        id: cluster.id,\n        properties: getClusterProperties(cluster),\n        geometry: {\n            type: 'Point',\n            coordinates: [xLng(cluster.x), yLat(cluster.y)]\n        }\n    };\n}\n\nfunction getClusterProperties(cluster) {\n    const count = cluster.numPoints;\n    const abbrev =\n        count >= 10000 ? `${Math.round(count / 1000)  }k` :\n        count >= 1000 ? `${Math.round(count / 100) / 10  }k` : count;\n    return extend(extend({}, cluster.properties), {\n        cluster: true,\n        cluster_id: cluster.id,\n        point_count: count,\n        point_count_abbreviated: abbrev\n    });\n}\n\n// longitude/latitude to spherical mercator in [0..1] range\nfunction lngX(lng) {\n    return lng / 360 + 0.5;\n}\nfunction latY(lat) {\n    const sin = Math.sin(lat * Math.PI / 180);\n    const y = (0.5 - 0.25 * Math.log((1 + sin) / (1 - sin)) / Math.PI);\n    return y < 0 ? 0 : y > 1 ? 1 : y;\n}\n\n// spherical mercator to longitude/latitude\nfunction xLng(x) {\n    return (x - 0.5) * 360;\n}\nfunction yLat(y) {\n    const y2 = (180 - y * 360) * Math.PI / 180;\n    return 360 * Math.atan(Math.exp(y2)) / Math.PI - 90;\n}\n\nfunction extend(dest, src) {\n    for (const id in src) dest[id] = src[id];\n    return dest;\n}\n\nfunction getX(p) {\n    return p.x;\n}\nfunction getY(p) {\n    return p.y;\n}\n","\nexport default function range(ids, coords, minX, minY, maxX, maxY, nodeSize) {\n    const stack = [0, ids.length - 1, 0];\n    const result = [];\n    let x, y;\n\n    while (stack.length) {\n        const axis = stack.pop();\n        const right = stack.pop();\n        const left = stack.pop();\n\n        if (right - left <= nodeSize) {\n            for (let i = left; i <= right; i++) {\n                x = coords[2 * i];\n                y = coords[2 * i + 1];\n                if (x >= minX && x <= maxX && y >= minY && y <= maxY) result.push(ids[i]);\n            }\n            continue;\n        }\n\n        const m = Math.floor((left + right) / 2);\n\n        x = coords[2 * m];\n        y = coords[2 * m + 1];\n\n        if (x >= minX && x <= maxX && y >= minY && y <= maxY) result.push(ids[m]);\n\n        const nextAxis = (axis + 1) % 2;\n\n        if (axis === 0 ? minX <= x : minY <= y) {\n            stack.push(left);\n            stack.push(m - 1);\n            stack.push(nextAxis);\n        }\n        if (axis === 0 ? maxX >= x : maxY >= y) {\n            stack.push(m + 1);\n            stack.push(right);\n            stack.push(nextAxis);\n        }\n    }\n\n    return result;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface ClusterOptions {\n  position?: google.maps.LatLng | google.maps.LatLngLiteral;\n  markers?: google.maps.Marker[];\n}\n\nexport class Cluster {\n  public marker: google.maps.Marker;\n  public readonly markers?: google.maps.Marker[];\n  protected _position: google.maps.LatLng;\n\n  constructor({ markers, position }: ClusterOptions) {\n    this.markers = markers;\n\n    if (position) {\n      if (position instanceof google.maps.LatLng) {\n        this._position = position;\n      } else {\n        this._position = new google.maps.LatLng(position);\n      }\n    }\n  }\n\n  public get bounds(): google.maps.LatLngBounds | undefined {\n    if (this.markers.length === 0 && !this._position) {\n      return undefined;\n    }\n\n    return this.markers.reduce((bounds, marker) => {\n      return bounds.extend(marker.getPosition());\n    }, new google.maps.LatLngBounds(this._position, this._position));\n  }\n\n  public get position(): google.maps.LatLng {\n    return this._position || this.bounds.getCenter();\n  }\n\n  /**\n   * Get the count of **visible** markers.\n   */\n  public get count(): number {\n    return this.markers.filter((m: google.maps.Marker) => m.getVisible())\n      .length;\n  }\n\n  /**\n   * Add a marker to the cluster.\n   */\n  public push(marker: google.maps.Marker): void {\n    this.markers.push(marker);\n  }\n\n  /**\n   * Cleanup references and remove marker from map.\n   */\n  public delete(): void {\n    if (this.marker) {\n      this.marker.setMap(null);\n      delete this.marker;\n    }\n    this.markers.length = 0;\n  }\n}\n","/**\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Cluster } from \"../cluster\";\nimport { filterMarkersToPaddedViewport } from \"./utils\";\n\nexport interface AlgorithmInput {\n  /**\n   * The map containing the markers and clusters.\n   */\n  map: google.maps.Map;\n  /**\n   * An array of markers to be clustered.\n   *\n   * There are some specific edge cases to be aware of including the following:\n   * * Markers that are not visible.\n   */\n  markers: google.maps.Marker[];\n  /**\n   * The `mapCanvasProjection` enables easy conversion from lat/lng to pixel.\n   *\n   * @see [MapCanvasProjection](https://developers.google.com/maps/documentation/javascript/reference/overlay-view#MapCanvasProjection)\n   */\n  mapCanvasProjection: google.maps.MapCanvasProjection;\n}\n\nexport interface AlgorithmOutput {\n  /**\n   * The clusters returned based upon the {@link AlgorithmInput}.\n   */\n  clusters: Cluster[];\n  /**\n   * A boolean flag indicating that the clusters have not changed.\n   */\n  changed?: boolean;\n}\n\nexport interface Algorithm {\n  /**\n   * Calculates an array of {@link Cluster}.\n   */\n  calculate: ({ markers, map }: AlgorithmInput) => AlgorithmOutput;\n}\n\nexport interface AlgorithmOptions {\n  maxZoom?: number;\n}\n/**\n * @hidden\n */\nexport abstract class AbstractAlgorithm implements Algorithm {\n  protected maxZoom: number;\n\n  constructor({ maxZoom = 16 }: AlgorithmOptions) {\n    this.maxZoom = maxZoom;\n  }\n  /**\n   * Helper function to bypass clustering based upon some map state such as\n   * zoom, number of markers, etc.\n   *\n   * ```typescript\n   *  cluster({markers, map}: AlgorithmInput): Cluster[] {\n   *    if (shouldBypassClustering(map)) {\n   *      return this.noop({markers, map})\n   *    }\n   * }\n   * ```\n   */\n  protected noop({ markers }: AlgorithmInput): Cluster[] {\n    return noop(markers);\n  }\n  /**\n   * Calculates an array of {@link Cluster}. Calculate is separate from\n   * {@link cluster} as it does preprocessing on the markers such as filtering\n   * based upon the viewport as in {@link AbstractViewportAlgorithm}. Caching\n   * and other optimizations can also be done here.\n   */\n  public abstract calculate({ markers, map }: AlgorithmInput): AlgorithmOutput;\n\n  /**\n   * Clusters the markers and called from {@link calculate}.\n   */\n  protected abstract cluster({ markers, map }: AlgorithmInput): Cluster[];\n}\n\n/**\n * @hidden\n */\nexport interface ViewportAlgorithmOptions extends AlgorithmOptions {\n  /**\n   * The number of pixels to extend beyond the viewport bounds when filtering\n   * markers prior to clustering.\n   */\n  viewportPadding?: number;\n}\n\n/**\n * Abstract viewport algorithm proves a class to filter markers by a padded\n * viewport. This is a common optimization.\n *\n * @hidden\n */\nexport abstract class AbstractViewportAlgorithm extends AbstractAlgorithm {\n  protected viewportPadding = 60;\n\n  constructor({ viewportPadding = 60, ...options }: ViewportAlgorithmOptions) {\n    super(options);\n    this.viewportPadding = viewportPadding;\n  }\n  public calculate({\n    markers,\n    map,\n    mapCanvasProjection,\n  }: AlgorithmInput): AlgorithmOutput {\n    if (map.getZoom() >= this.maxZoom) {\n      return {\n        clusters: this.noop({\n          markers,\n          map,\n          mapCanvasProjection,\n        }),\n        changed: false,\n      };\n    }\n\n    return {\n      clusters: this.cluster({\n        markers: filterMarkersToPaddedViewport(\n          map,\n          mapCanvasProjection,\n          markers,\n          this.viewportPadding\n        ),\n        map,\n        mapCanvasProjection,\n      }),\n    };\n  }\n  protected abstract cluster({ markers, map }: AlgorithmInput): Cluster[];\n}\n\n/**\n * @hidden\n */\nexport const noop = (markers: google.maps.Marker[]): Cluster[] => {\n  const clusters = markers.map(\n    (marker) =>\n      new Cluster({\n        position: marker.getPosition(),\n        markers: [marker],\n      })\n  );\n  return clusters;\n};\n","/**\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AbstractAlgorithm, AlgorithmInput, AlgorithmOutput } from \"./core\";\nimport SuperCluster, { ClusterFeature } from \"supercluster\";\n\nimport { Cluster } from \"../cluster\";\nimport equal from \"fast-deep-equal\";\n\nexport type SuperClusterOptions = SuperCluster.Options<\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  { [name: string]: any },\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  { [name: string]: any }\n>;\n\n/**\n * A very fast JavaScript algorithm for geospatial point clustering using KD trees.\n *\n * @see https://www.npmjs.com/package/supercluster for more information on options.\n */\nexport class SuperClusterAlgorithm extends AbstractAlgorithm {\n  protected superCluster: SuperCluster;\n  protected markers: google.maps.Marker[];\n  protected clusters: Cluster[];\n  protected state: { zoom: number };\n\n  constructor({ maxZoom, radius = 60, ...options }: SuperClusterOptions) {\n    super({ maxZoom });\n\n    this.superCluster = new SuperCluster({\n      maxZoom: this.maxZoom,\n      radius,\n      ...options,\n    });\n\n    this.state = { zoom: null };\n  }\n  public calculate(input: AlgorithmInput): AlgorithmOutput {\n    let changed = false;\n\n    if (!equal(input.markers, this.markers)) {\n      changed = true;\n      // TODO use proxy to avoid copy?\n      this.markers = [...input.markers];\n\n      const points = this.markers.map((marker) => {\n        return {\n          type: \"Feature\" as const,\n          geometry: {\n            type: \"Point\" as const,\n            coordinates: [\n              marker.getPosition().lng(),\n              marker.getPosition().lat(),\n            ],\n          },\n          properties: { marker },\n        };\n      });\n\n      this.superCluster.load(points);\n    }\n\n    const state = { zoom: input.map.getZoom() };\n\n    if (!changed) {\n      if (this.state.zoom > this.maxZoom && state.zoom > this.maxZoom) {\n        // still beyond maxZoom, no change\n      } else {\n        changed = changed || !equal(this.state, state);\n      }\n    }\n\n    this.state = state;\n\n    if (changed) {\n      this.clusters = this.cluster(input);\n    }\n\n    return { clusters: this.clusters, changed };\n  }\n\n  public cluster({ map }: AlgorithmInput): Cluster[] {\n    return this.superCluster\n      .getClusters([-180, -90, 180, 90], Math.round(map.getZoom()))\n      .map(this.transformCluster.bind(this));\n  }\n\n  protected transformCluster({\n    geometry: {\n      coordinates: [lng, lat],\n    },\n    properties,\n  }: ClusterFeature<{ marker: google.maps.Marker }>): Cluster {\n    if (properties.cluster) {\n      return new Cluster({\n        markers: this.superCluster\n          .getLeaves(properties.cluster_id, Infinity)\n          .map((leaf) => leaf.properties.marker),\n        position: new google.maps.LatLng({ lat, lng }),\n      });\n    } else {\n      const marker = properties.marker;\n\n      return new Cluster({\n        markers: [marker],\n        position: marker.getPosition(),\n      });\n    }\n  }\n}\n","/**\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Cluster } from \"./cluster\";\n\n/**\n * Provides statistics on all clusters in the current render cycle for use in {@link Renderer.render}.\n */\nexport class ClusterStats {\n  public readonly markers: { sum: number };\n  public readonly clusters: {\n    count: number;\n    markers: {\n      mean: number;\n      sum: number;\n      min: number;\n      max: number;\n    };\n  };\n\n  constructor(markers: google.maps.Marker[], clusters: Cluster[]) {\n    this.markers = { sum: markers.length };\n\n    const clusterMarkerCounts = clusters.map((a) => a.count);\n    const clusterMarkerSum = clusterMarkerCounts.reduce((a, b) => a + b, 0);\n\n    this.clusters = {\n      count: clusters.length,\n      markers: {\n        mean: clusterMarkerSum / clusters.length,\n        sum: clusterMarkerSum,\n        min: Math.min(...clusterMarkerCounts),\n        max: Math.max(...clusterMarkerCounts),\n      },\n    };\n  }\n}\n\nexport interface Renderer {\n  /**\n   * Turn a {@link Cluster} into a `google.maps.Marker`.\n   *\n   * Below is a simple example to create a marker with the number of markers in the cluster as a label.\n   *\n   * ```typescript\n   * return new google.maps.Marker({\n   *   position,\n   *   label: String(markers.length),\n   * });\n   * ```\n   */\n  render(cluster: Cluster, stats: ClusterStats): google.maps.Marker;\n}\n\nexport class DefaultRenderer implements Renderer {\n  /**\n   * The default render function for the library used by {@link MarkerClusterer}.\n   *\n   * Currently set to use the following:\n   *\n   * ```typescript\n   * // change color if this cluster has more markers than the mean cluster\n   * const color =\n   *   count > Math.max(10, stats.clusters.markers.mean)\n   *     ? \"#ff0000\"\n   *     : \"#0000ff\";\n   *\n   * // create svg url with fill color\n   * const svg = window.btoa(`\n   * <svg fill=\"${color}\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 240 240\">\n   *   <circle cx=\"120\" cy=\"120\" opacity=\".6\" r=\"70\" />\n   *   <circle cx=\"120\" cy=\"120\" opacity=\".3\" r=\"90\" />\n   *   <circle cx=\"120\" cy=\"120\" opacity=\".2\" r=\"110\" />\n   *   <circle cx=\"120\" cy=\"120\" opacity=\".1\" r=\"130\" />\n   * </svg>`);\n   *\n   * // create marker using svg icon\n   * return new google.maps.Marker({\n   *   position,\n   *   icon: {\n   *     url: `data:image/svg+xml;base64,${svg}`,\n   *     scaledSize: new google.maps.Size(45, 45),\n   *   },\n   *   label: {\n   *     text: String(count),\n   *     color: \"rgba(255,255,255,0.9)\",\n   *     fontSize: \"12px\",\n   *   },\n   *   // adjust zIndex to be above other markers\n   *   zIndex: 1000 + count,\n   * });\n   * ```\n   */\n  public render(\n    { count, position }: Cluster,\n    stats: ClusterStats\n  ): google.maps.Marker {\n    // change color if this cluster has more markers than the mean cluster\n    const color =\n      count > Math.max(10, stats.clusters.markers.mean) ? \"#ff0000\" : \"#0000ff\";\n\n    // create svg url with fill color\n    const svg = window.btoa(`\n  <svg fill=\"${color}\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 240 240\">\n    <circle cx=\"120\" cy=\"120\" opacity=\".6\" r=\"70\" />\n    <circle cx=\"120\" cy=\"120\" opacity=\".3\" r=\"90\" />\n    <circle cx=\"120\" cy=\"120\" opacity=\".2\" r=\"110\" />\n  </svg>`);\n\n    // create marker using svg icon\n    return new google.maps.Marker({\n      position,\n      icon: {\n        url: `data:image/svg+xml;base64,${svg}`,\n        scaledSize: new google.maps.Size(45, 45),\n      },\n      label: {\n        text: String(count),\n        color: \"rgba(255,255,255,0.9)\",\n        fontSize: \"12px\",\n      },\n      title: `Cluster of ${count} markers`,\n      // adjust zIndex to be above other markers\n      zIndex: Number(google.maps.Marker.MAX_ZINDEX) + count,\n    });\n  }\n}\n","/**\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Algorithm, SuperClusterAlgorithm } from \"./algorithms\";\nimport { ClusterStats, DefaultRenderer, Renderer } from \"./renderer\";\n\nimport { Cluster } from \"./cluster\";\nimport { OverlayViewSafe } from \"./overlay-view-safe\";\n\nexport type onClusterClickHandler = (\n  event: google.maps.MapMouseEvent,\n  cluster: Cluster,\n  map: google.maps.Map\n) => void;\nexport interface MarkerClustererOptions {\n  markers?: google.maps.Marker[];\n  /**\n   * An algorithm to cluster markers. Default is {@link SuperClusterAlgorithm}. Must\n   * provide a `calculate` method accepting {@link AlgorithmInput} and returning\n   * an array of {@link Cluster}.\n   */\n  algorithm?: Algorithm;\n  map?: google.maps.Map | null;\n  /**\n   * An object that converts a {@link Cluster} into a `google.maps.Marker`.\n   * Default is {@link DefaultRenderer}.\n   */\n  renderer?: Renderer;\n  onClusterClick?: onClusterClickHandler;\n}\n\nexport enum MarkerClustererEvents {\n  CLUSTERING_BEGIN = \"clusteringbegin\",\n  CLUSTERING_END = \"clusteringend\",\n  CLUSTER_CLICK = \"click\",\n}\n\nexport const defaultOnClusterClickHandler: onClusterClickHandler = (\n  _: google.maps.MapMouseEvent,\n  cluster: Cluster,\n  map: google.maps.Map\n): void => {\n  map.fitBounds(cluster.bounds);\n};\n/**\n * MarkerClusterer creates and manages per-zoom-level clusters for large amounts\n * of markers. See {@link MarkerClustererOptions} for more details.\n *\n */\nexport class MarkerClusterer extends OverlayViewSafe {\n  /** @see {@link MarkerClustererOptions.onClusterClick} */\n  public onClusterClick: onClusterClickHandler;\n  /** @see {@link MarkerClustererOptions.algorithm} */\n  protected algorithm: Algorithm;\n  protected clusters: Cluster[];\n  protected markers: google.maps.Marker[];\n  /** @see {@link MarkerClustererOptions.renderer} */\n  protected renderer: Renderer;\n  /** @see {@link MarkerClustererOptions.map} */\n  protected map: google.maps.Map | null;\n  /** @see {@link MarkerClustererOptions.maxZoom} */\n  protected idleListener: google.maps.MapsEventListener;\n\n  constructor({\n    map,\n    markers = [],\n    algorithm = new SuperClusterAlgorithm({}),\n    renderer = new DefaultRenderer(),\n    onClusterClick = defaultOnClusterClickHandler,\n  }: MarkerClustererOptions) {\n    super();\n    this.markers = [...markers];\n    this.clusters = [];\n\n    this.algorithm = algorithm;\n    this.renderer = renderer;\n\n    this.onClusterClick = onClusterClick;\n\n    if (map) {\n      this.setMap(map);\n    }\n  }\n\n  public addMarker(marker: google.maps.Marker, noDraw?: boolean): void {\n    if (this.markers.includes(marker)) {\n      return;\n    }\n\n    this.markers.push(marker);\n    if (!noDraw) {\n      this.render();\n    }\n  }\n\n  public addMarkers(markers: google.maps.Marker[], noDraw?: boolean): void {\n    markers.forEach((marker) => {\n      this.addMarker(marker, true);\n    });\n\n    if (!noDraw) {\n      this.render();\n    }\n  }\n\n  public removeMarker(marker: google.maps.Marker, noDraw?: boolean): boolean {\n    const index = this.markers.indexOf(marker);\n\n    if (index === -1) {\n      // Marker is not in our list of markers, so do nothing:\n      return false;\n    }\n\n    marker.setMap(null);\n    this.markers.splice(index, 1); // Remove the marker from the list of managed markers\n\n    if (!noDraw) {\n      this.render();\n    }\n\n    return true;\n  }\n\n  public removeMarkers(\n    markers: google.maps.Marker[],\n    noDraw?: boolean\n  ): boolean {\n    let removed = false;\n\n    markers.forEach((marker) => {\n      removed = this.removeMarker(marker, true) || removed;\n    });\n\n    if (removed && !noDraw) {\n      this.render();\n    }\n\n    return removed;\n  }\n\n  public clearMarkers(noDraw?: boolean): void {\n    this.markers.length = 0;\n\n    if (!noDraw) {\n      this.render();\n    }\n  }\n\n  /**\n   * Recalculates and draws all the marker clusters.\n   */\n  public render(): void {\n    const map = this.getMap();\n    if (map instanceof google.maps.Map && this.getProjection()) {\n      google.maps.event.trigger(\n        this,\n        MarkerClustererEvents.CLUSTERING_BEGIN,\n        this\n      );\n      const { clusters, changed } = this.algorithm.calculate({\n        markers: this.markers,\n        map,\n        mapCanvasProjection: this.getProjection(),\n      });\n\n      // allow algorithms to return flag on whether the clusters/markers have changed\n      if (changed || changed == undefined) {\n        // reset visibility of markers and clusters\n        this.reset();\n\n        // store new clusters\n        this.clusters = clusters;\n\n        this.renderClusters();\n      }\n      google.maps.event.trigger(\n        this,\n        MarkerClustererEvents.CLUSTERING_END,\n        this\n      );\n    }\n  }\n\n  public onAdd(): void {\n    this.idleListener = this.getMap().addListener(\n      \"idle\",\n      this.render.bind(this)\n    );\n    this.render();\n  }\n\n  public onRemove(): void {\n    google.maps.event.removeListener(this.idleListener);\n    this.reset();\n  }\n\n  protected reset(): void {\n    this.markers.forEach((marker) => marker.setMap(null));\n    this.clusters.forEach((cluster) => cluster.delete());\n    this.clusters = [];\n  }\n\n  protected renderClusters(): void {\n    // generate stats to pass to renderers\n    const stats = new ClusterStats(this.markers, this.clusters);\n    const map = this.getMap() as google.maps.Map;\n\n    this.clusters.forEach((cluster) => {\n      if (cluster.markers.length === 1) {\n        cluster.marker = cluster.markers[0];\n      } else {\n        cluster.marker = this.renderer.render(cluster, stats);\n\n        if (this.onClusterClick) {\n          cluster.marker.addListener(\n            \"click\",\n            /* istanbul ignore next */\n            (event: google.maps.MapMouseEvent) => {\n              google.maps.event.trigger(\n                this,\n                MarkerClustererEvents.CLUSTER_CLICK,\n                cluster\n              );\n              this.onClusterClick(event, cluster, map);\n            }\n          );\n        }\n      }\n\n      cluster.marker.setMap(map);\n    });\n  }\n}\n","/**\n * Copyright 2019 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface OverlayViewSafe extends google.maps.OverlayView {}\n\n/**\n * Extends an object's prototype by another's.\n *\n * @param type1 The Type to be extended.\n * @param type2 The Type to extend with.\n * @ignore\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction extend(type1: any, type2: any): void {\n  /* istanbul ignore next */\n  // eslint-disable-next-line prefer-const\n  for (let property in type2.prototype) {\n    type1.prototype[property] = type2.prototype[property];\n  }\n}\n\n/**\n * @ignore\n */\nexport class OverlayViewSafe {\n  constructor() {\n    // MarkerClusterer implements google.maps.OverlayView interface. We use the\n    // extend function to extend MarkerClusterer with google.maps.OverlayView\n    // because it might not always be available when the code is defined so we\n    // look for it at the last possible moment. If it doesn't exist now then\n    // there is no point going ahead :)\n    extend(OverlayViewSafe, google.maps.OverlayView);\n  }\n}\n","import { WebPlugin } from '@capacitor/core';\nimport type {\n  Cluster,\n  onClusterClickHandler,\n} from '@googlemaps/markerclusterer';\nimport { MarkerClusterer } from '@googlemaps/markerclusterer';\n\nimport type { LatLngBounds, Marker } from './definitions';\nimport type {\n  AccElementsArgs,\n  AddMarkerArgs,\n  CameraArgs,\n  AddMarkersArgs,\n  CapacitorGoogleMapsPlugin,\n  CreateMapArgs,\n  CurrentLocArgs,\n  DestroyMapArgs,\n  IndoorMapArgs,\n  MapTypeArgs,\n  PaddingArgs,\n  RemoveMarkerArgs,\n  TrafficLayerArgs,\n  RemoveMarkersArgs,\n  OnScrollArgs,\n} from './implementation';\n\nexport class CapacitorGoogleMapsWeb\n  extends WebPlugin\n  implements CapacitorGoogleMapsPlugin\n{\n  private gMapsRef: typeof google.maps | undefined = undefined;\n  private maps: {\n    [id: string]: {\n      element: HTMLElement;\n      map: google.maps.Map;\n      markers: {\n        [id: string]: google.maps.Marker;\n      };\n      markerClusterer?: MarkerClusterer;\n      trafficLayer?: google.maps.TrafficLayer;\n    };\n  } = {};\n  private currMarkerId = 0;\n\n  private onClusterClickHandler: onClusterClickHandler = (\n    _: google.maps.MapMouseEvent,\n    cluster: Cluster,\n    map: google.maps.Map,\n  ): void => {\n    const mapId = this.getIdFromMap(map);\n    const items: any[] = [];\n\n    if (cluster.markers != undefined) {\n      for (const marker of cluster.markers) {\n        const markerId = this.getIdFromMarker(mapId, marker);\n\n        items.push({\n          markerId: markerId,\n          latitude: marker.getPosition()?.lat(),\n          longitude: marker.getPosition()?.lng(),\n          title: marker.getTitle(),\n          snippet: '',\n        });\n      }\n    }\n\n    this.notifyListeners('onClusterClick', {\n      mapId: mapId,\n      latitude: cluster.position.lat(),\n      longitude: cluster.position.lng(),\n      size: cluster.count,\n      items: items,\n    });\n  };\n\n  private getIdFromMap(map: google.maps.Map): string {\n    for (const id in this.maps) {\n      if (this.maps[id].map == map) {\n        return id;\n      }\n    }\n\n    return '';\n  }\n\n  private getIdFromMarker(mapId: string, marker: google.maps.Marker): string {\n    for (const id in this.maps[mapId].markers) {\n      if (this.maps[id].markers[id] == marker) {\n        return id;\n      }\n    }\n\n    return '';\n  }\n\n  private async importGoogleLib(apiKey: string) {\n    if (this.gMapsRef === undefined) {\n      const lib = await import('@googlemaps/js-api-loader');\n      const loader = new lib.Loader({\n        apiKey: apiKey ?? '',\n        version: 'weekly',\n        libraries: ['places'],\n      });\n      const google = await loader.load();\n      this.gMapsRef = google.maps;\n      console.log('Loaded google maps API');\n    }\n  }\n\n  async setCamera(_args: CameraArgs): Promise<void> {\n    // Animation not supported yet...\n    this.maps[_args.id].map.moveCamera({\n      center: _args.config.coordinate,\n      heading: _args.config.bearing,\n      tilt: _args.config.angle,\n      zoom: _args.config.zoom,\n    });\n  }\n\n  async setMapType(_args: MapTypeArgs): Promise<void> {\n    this.maps[_args.id].map.setMapTypeId(_args.mapType);\n  }\n\n  async enableIndoorMaps(_args: IndoorMapArgs): Promise<void> {\n    throw new Error('Method not supported on web.');\n  }\n\n  async enableTrafficLayer(_args: TrafficLayerArgs): Promise<void> {\n    const trafficLayer =\n      this.maps[_args.id].trafficLayer ?? new google.maps.TrafficLayer();\n\n    if (_args.enabled) {\n      trafficLayer.setMap(this.maps[_args.id].map);\n      this.maps[_args.id].trafficLayer = trafficLayer;\n    } else if (this.maps[_args.id].trafficLayer) {\n      trafficLayer.setMap(null);\n      this.maps[_args.id].trafficLayer = undefined;\n    }\n  }\n\n  async enableAccessibilityElements(_args: AccElementsArgs): Promise<void> {\n    throw new Error('Method not supported on web.');\n  }\n\n  dispatchMapEvent(_args: { id: string }): Promise<void> {\n    throw new Error('Method not supported on web.');\n  }\n\n  async enableCurrentLocation(_args: CurrentLocArgs): Promise<void> {\n    if (_args.enabled) {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          (position: GeolocationPosition) => {\n            const pos = {\n              lat: position.coords.latitude,\n              lng: position.coords.longitude,\n            };\n\n            this.maps[_args.id].map.setCenter(pos);\n\n            this.notifyListeners('onMyLocationButtonClick', {});\n\n            this.notifyListeners('onMyLocationClick', {});\n          },\n          () => {\n            throw new Error('Geolocation not supported on web browser.');\n          },\n        );\n      } else {\n        throw new Error('Geolocation not supported on web browser.');\n      }\n    }\n  }\n  async setPadding(_args: PaddingArgs): Promise<void> {\n    const bounds = this.maps[_args.id].map.getBounds();\n\n    if (bounds !== undefined) {\n      this.maps[_args.id].map.fitBounds(bounds, _args.padding);\n    }\n  }\n\n  async getMapBounds(_args: { id: string }): Promise<LatLngBounds> {\n    const bounds = this.maps[_args.id].map.getBounds();\n\n    if (!bounds) {\n      throw new Error('Google Map Bounds could not be found.');\n    }\n\n    return {\n      southwest: {\n        lat: bounds.getSouthWest().lat(),\n        lng: bounds.getSouthWest().lng(),\n      },\n      center: {\n        lat: bounds.getCenter().lat(),\n        lng: bounds.getCenter().lng(),\n      },\n      northeast: {\n        lat: bounds.getNorthEast().lat(),\n        lng: bounds.getNorthEast().lng(),\n      },\n    };\n  }\n\n  async addMarkers(_args: AddMarkersArgs): Promise<{ ids: string[] }> {\n    const markerIds: string[] = [];\n    const map = this.maps[_args.id];\n\n    for (const markerArgs of _args.markers) {\n      const markerOpts = this.buildMarkerOpts(markerArgs, map.map);\n      const marker = new google.maps.Marker(markerOpts);\n\n      const id = '' + this.currMarkerId;\n\n      map.markers[id] = marker;\n      this.setMarkerListeners(_args.id, id, marker);\n\n      markerIds.push(id);\n      this.currMarkerId++;\n    }\n\n    return { ids: markerIds };\n  }\n\n  async addMarker(_args: AddMarkerArgs): Promise<{ id: string }> {\n    const markerOpts = this.buildMarkerOpts(\n      _args.marker,\n      this.maps[_args.id].map,\n    );\n\n    console.log(markerOpts);\n    const marker = new google.maps.Marker(markerOpts);\n\n    const id = '' + this.currMarkerId;\n\n    this.maps[_args.id].markers[id] = marker;\n    this.setMarkerListeners(_args.id, id, marker);\n\n    this.currMarkerId++;\n\n    return { id: id };\n  }\n\n  async removeMarkers(_args: RemoveMarkersArgs): Promise<void> {\n    const map = this.maps[_args.id];\n\n    for (const id of _args.markerIds) {\n      map.markers[id].setMap(null);\n      delete map.markers[id];\n    }\n  }\n\n  async removeMarker(_args: RemoveMarkerArgs): Promise<void> {\n    this.maps[_args.id].markers[_args.markerId].setMap(null);\n    delete this.maps[_args.id].markers[_args.markerId];\n  }\n\n  async enableClustering(_args: { id: string }): Promise<void> {\n    const markers: google.maps.Marker[] = [];\n\n    for (const id in this.maps[_args.id].markers) {\n      markers.push(this.maps[_args.id].markers[id]);\n    }\n\n    this.maps[_args.id].markerClusterer = new MarkerClusterer({\n      map: this.maps[_args.id].map,\n      markers: markers,\n      onClusterClick: this.onClusterClickHandler,\n    });\n  }\n\n  async disableClustering(_args: { id: string }): Promise<void> {\n    this.maps[_args.id].markerClusterer?.setMap(null);\n    this.maps[_args.id].markerClusterer = undefined;\n  }\n\n  async onScroll(_args: OnScrollArgs): Promise<void> {\n    throw new Error('Method not supported on web.');\n  }\n\n  async create(_args: CreateMapArgs): Promise<void> {\n    console.log(`Create map: ${_args.id}`);\n    await this.importGoogleLib(_args.apiKey);\n    this.maps[_args.id] = {\n      map: new window.google.maps.Map(_args.element, { ..._args.config }),\n      element: _args.element,\n      markers: {},\n    };\n    this.setMapListeners(_args.id);\n  }\n\n  async destroy(_args: DestroyMapArgs): Promise<void> {\n    console.log(`Destroy map: ${_args.id}`);\n    const mapItem = this.maps[_args.id];\n    mapItem.element.innerHTML = '';\n    mapItem.map.unbindAll();\n    delete this.maps[_args.id];\n  }\n\n  async setMarkerListeners(\n    mapId: string,\n    markerId: string,\n    marker: google.maps.Marker,\n  ): Promise<void> {\n    marker.addListener('click', () => {\n      this.notifyListeners('onMarkerClick', {\n        mapId: mapId,\n        markerId: markerId,\n        latitude: marker.getPosition()?.lat(),\n        longitude: marker.getPosition()?.lng(),\n        title: marker.getTitle(),\n        snippet: '',\n      });\n    });\n\n    marker.addListener('dragstart', () => {\n      this.notifyListeners('onMarkerDragStart', {\n        mapId: mapId,\n        markerId: markerId,\n        latitude: marker.getPosition()?.lat(),\n        longitude: marker.getPosition()?.lng(),\n        title: marker.getTitle(),\n        snippet: '',\n      });\n    });\n\n    marker.addListener('drag', () => {\n      this.notifyListeners('onMarkerDrag', {\n        mapId: mapId,\n        markerId: markerId,\n        latitude: marker.getPosition()?.lat(),\n        longitude: marker.getPosition()?.lng(),\n        title: marker.getTitle(),\n        snippet: '',\n      });\n    });\n\n    marker.addListener('dragend', () => {\n      this.notifyListeners('onMarkerDragEnd', {\n        mapId: mapId,\n        markerId: markerId,\n        latitude: marker.getPosition()?.lat(),\n        longitude: marker.getPosition()?.lng(),\n        title: marker.getTitle(),\n        snippet: '',\n      });\n    });\n  }\n\n  async setMapListeners(mapId: string): Promise<void> {\n    const map = this.maps[mapId].map;\n\n    map.addListener('idle', async () => {\n      const bounds = await this.getMapBounds({ id: mapId });\n      this.notifyListeners('onCameraIdle', {\n        mapId: mapId,\n        bearing: map.getHeading(),\n        bounds: bounds,\n        latitude: map.getCenter()?.lat(),\n        longitude: map.getCenter()?.lng(),\n        tilt: map.getTilt(),\n        zoom: map.getZoom(),\n      });\n    });\n\n    map.addListener('center_changed', () => {\n      this.notifyListeners('onCameraMoveStarted', {\n        mapId: mapId,\n        isGesture: true,\n      });\n    });\n\n    map.addListener('bounds_changed', async () => {\n      const bounds = await this.getMapBounds({ id: mapId });\n      this.notifyListeners('onBoundsChanged', {\n        mapId: mapId,\n        bearing: map.getHeading(),\n        bounds: bounds,\n        latitude: map.getCenter()?.lat(),\n        longitude: map.getCenter()?.lng(),\n        tilt: map.getTilt(),\n        zoom: map.getZoom(),\n      });\n    });\n\n    map.addListener(\n      'click',\n      (e: google.maps.MapMouseEvent | google.maps.IconMouseEvent) => {\n        this.notifyListeners('onMapClick', {\n          mapId: mapId,\n          latitude: e.latLng?.lat(),\n          longitude: e.latLng?.lng(),\n        });\n      },\n    );\n\n    this.notifyListeners('onMapReady', {\n      mapId: mapId,\n    });\n  }\n\n  private buildMarkerOpts(\n    marker: Marker,\n    map: google.maps.Map,\n  ): google.maps.MarkerOptions {\n    let iconImage: google.maps.Icon | undefined = undefined;\n    if (marker.iconUrl) {\n      iconImage = {\n        url: marker.iconUrl,\n        scaledSize: marker.iconSize\n          ? new google.maps.Size(marker.iconSize.width, marker.iconSize.height)\n          : null,\n        anchor: marker.iconAnchor\n          ? new google.maps.Point(marker.iconAnchor.x, marker.iconAnchor.y)\n          : new google.maps.Point(0, 0),\n        origin: marker.iconOrigin\n          ? new google.maps.Point(marker.iconOrigin.x, marker.iconOrigin.y)\n          : new google.maps.Point(0, 0),\n      };\n    }\n\n    const opts: google.maps.MarkerOptions = {\n      position: marker.coordinate,\n      map: map,\n      opacity: marker.opacity,\n      title: marker.title,\n      icon: iconImage,\n    };\n\n    return opts;\n  }\n}\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n"],"names":["sortKD","ids","coords","nodeSize","left","right","depth","m","select","k","inc","n","z","Math","log","s","exp","sd","sqrt","max","floor","min","t","i","j","swapItem","swap","arr","tmp","sqDist","ax","ay","bx","by","dx","dy","defaultGetX","p","defaultGetY","KDBush","points","getX","getY","ArrayType","Float64Array","this","IndexArrayType","length","Uint16Array","Uint32Array","sort","minX","minY","maxX","maxY","x","y","stack","result","axis","pop","push","nextAxis","range","r","qx","qy","r2","within","defaultOptions","minZoom","maxZoom","minPoints","radius","extent","generateId","reduce","map","props","fround","Float32Array","Supercluster","options","extend","Object","create","trees","Array","console","time","timerId","clusters","geometry","createPointCluster","timeEnd","now","Date","_cluster","bbox","zoom","minLng","minLat","maxLng","maxLat","easternHem","getClusters","westernHem","concat","tree","_limitZoom","lngX","latY","id","c","numPoints","getClusterJSON","index","clusterId","originId","_getOriginId","originZoom","_getOriginZoom","errorMsg","Error","origin","pow","children","parentId","limit","offset","leaves","_appendLeaves","z2","top","bottom","tile","features","_addTileFeatures","expansionZoom","getChildren","properties","cluster_id","skipped","child","cluster","point_count","isCluster","tags","px","py","getClusterProperties","coordinates","f","type","round","undefined","neighborIds","numPointsOrigin","neighborId","b","wx","wy","clusterProperties","_map","numPoints2","createCluster","point","clone","original","Infinity","yLat","count","abbrev","point_count_abbreviated","lng","lat","sin","PI","y2","atan","dest","src","__rest","e","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","propertyIsEnumerable","Cluster","markers","position","google","maps","LatLng","_position","bounds","marker","getPosition","LatLngBounds","getCenter","filter","getVisible","setMap","AbstractAlgorithm","noop","SuperClusterAlgorithm","_a","superCluster","SuperCluster","state","input","changed","equal","load","getZoom","transformCluster","bind","getLeaves","leaf","ClusterStats","sum","clusterMarkerCounts","a","clusterMarkerSum","mean","DefaultRenderer","stats","color","svg","window","btoa","Marker","icon","url","scaledSize","Size","label","text","String","fontSize","title","zIndex","Number","MAX_ZINDEX","MarkerClustererEvents","OverlayViewSafe","type1","type2","property","OverlayView","defaultOnClusterClickHandler","_","fitBounds","MarkerClusterer","algorithm","renderer","onClusterClick","noDraw","includes","render","forEach","addMarker","splice","removed","removeMarker","getMap","Map","getProjection","event","trigger","CLUSTERING_BEGIN","calculate","mapCanvasProjection","reset","renderClusters","CLUSTERING_END","idleListener","addListener","removeListener","delete","CLUSTER_CLICK","CapacitorGoogleMapsWeb","gMapsRef","currMarkerId","onClusterClickHandler","mapId","getIdFromMap","items","markerId","getIdFromMarker","latitude","longitude","_b","getTitle","snippet","notifyListeners","size","apiKey","lib","loader","Loader","version","libraries","_args","moveCamera","center","config","coordinate","heading","bearing","tilt","angle","setMapTypeId","mapType","trafficLayer","TrafficLayer","enabled","navigator","geolocation","getCurrentPosition","pos","setCenter","getBounds","padding","southwest","getSouthWest","northeast","getNorthEast","markerIds","markerArgs","markerOpts","buildMarkerOpts","setMarkerListeners","markerClusterer","importGoogleLib","element","setMapListeners","mapItem","innerHTML","unbindAll","getMapBounds","getHeading","getTilt","isGesture","latLng","iconImage","iconUrl","iconSize","width","height","anchor","iconAnchor","Point","iconOrigin","opacity","WebPlugin","module","exports","constructor","keys","isArray","RegExp","source","flags","valueOf","toString","key"],"sourceRoot":""}